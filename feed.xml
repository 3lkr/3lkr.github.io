

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://3lkr.github.io/</id>
  <title>3lkr</title>
  <subtitle>This blog is a space for me to share and discuss cybersecurity topics. Your feedback and ideas are always welcome.</subtitle>
  <updated>2025-10-26T18:52:14+01:00</updated>
  <author>
    <name>AIT-EL MOUDDENE Ossama</name>
    <uri>https://3lkr.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://3lkr.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://3lkr.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator>
  <rights> © 2025 AIT-EL MOUDDENE Ossama </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>AMSI Evasion - Runtime DLL Load Interception</title>
    <link href="https://3lkr.github.io/posts/AMSI/" rel="alternate" type="text/html" title="AMSI Evasion - Runtime DLL Load Interception" />
    <published>2025-10-26T00:00:00+02:00</published>
  
    <updated>2025-10-26T00:00:00+02:00</updated>
  
    <id>https://3lkr.github.io/posts/AMSI/</id>
    <content type="text/html" src="https://3lkr.github.io/posts/AMSI/" />
    <author>
      <name>AIT-EL MOUDDENE Ossama</name>
    </author>

  
    
    <category term="Maldev" />
    
  

  <summary>Introduction  While exploring the .NET CLR, I’ve always been fascinated by the process of loading assemblies mapping entry points, inspecting methods and classes, and manipulating the loading context itself. In my journey in malware development, I used to craft heavily obfuscated and packed C# payloads. Statically, they evaded detection with ease no suspicious API calls, clean imports. But the ...</summary>

  </entry>

</feed>


